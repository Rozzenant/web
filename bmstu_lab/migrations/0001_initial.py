# Generated by Django 4.2.5 on 2024-01-11 00:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Никнейм')),
                ('password', models.CharField(max_length=255, verbose_name='Пароль')),
                ('is_moderator', models.BooleanField(default=False, verbose_name='Является ли пользователь модератором?')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='First_aid',
            fields=[
                ('First_aid_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('First_aid_Name', models.CharField(help_text='Input First aid Name', max_length=128)),
                ('Description', models.TextField()),
                ('Image_URL', models.ImageField(blank=True, upload_to='img/')),
                ('Price', models.FloatField(max_length=16)),
                ('Status', models.CharField(choices=[('0', 'Удален'), ('1', 'Действует')], default='1', help_text='Status First aid', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='First_aid_Trauma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('First_aid_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bmstu_lab.first_aid')),
            ],
        ),
        migrations.CreateModel(
            name='Trauma',
            fields=[
                ('Trauma_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('Status', models.CharField(choices=[('Draft', 'Черновик'), ('Formed', 'Сформирована'), ('Completed', 'Завершёна'), ('Cancelled', 'Отклонена'), ('Deleted', 'Удалёна')], default='Draft', help_text='Status Trauma', max_length=10)),
                ('Date_Creation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date of Creating of the order (Trauma)')),
                ('Date_Approving', models.DateTimeField(blank=True, help_text='Date of Approving (Trauma)', null=True)),
                ('Date_End', models.DateTimeField(blank=True, help_text='Date of End order (Trauma)', null=True)),
                ('Confirmation_Doctor', models.CharField(choices=[('Pending', 'Ожидается'), ('Confirmed', 'Подтверждено'), ('Rejected', 'Отклонено')], default=None, help_text='Verbal confirmation of the Trauma', max_length=20, null=True)),
                ('Creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ID_Creator', to=settings.AUTH_USER_MODEL)),
                ('First_aid_in_Trauma_List', models.ManyToManyField(through='bmstu_lab.First_aid_Trauma', to='bmstu_lab.first_aid')),
                ('Moderator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ID_Moderator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='first_aid_trauma',
            name='Trauma_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bmstu_lab.trauma'),
        ),
    ]
